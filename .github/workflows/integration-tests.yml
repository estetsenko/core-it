name: Run integration tests

on:
  push:
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "integration-tests"
  cancel-in-progress: false

jobs:
  integration-tests:
    environment:
      name: pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      - name: Run integration tests
        run: |
          for module in module-a module-b module-c; do
            mvn -pl $module test surefire-report:report || true
            today=$(date +%Y-%m-%d)
            mkdir -p report/reports/$today/$module/pages
            cp -r $module/target/surefire-reports/* report/reports/$today/$module || true
            cp -r $module/target/reports/* report/reports/$today/$module/pages || true
            mv report/reports/$today/$module/pages/surefire.html report/reports/$today/$module/pages/index.html || true
          done

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Update report history
        run: |
          today=$(date +%Y-%m-%d)
          mkdir -p report
          cp report-template.html report/index.html

          successes=0
          failures=0
          projects=""

          for moduleDir in report/reports/$today/*; do
            [ -d "$moduleDir" ] || continue
            module=$(basename "$moduleDir")
            projects="$projects $module"

            msucc=0
            mfail=0
            for f in $moduleDir/TEST-*.xml; do
              [ -f "$f" ] || continue
              line=$(grep -o '<testsuite[^>]*>' "$f" | head -n1)
              tests=$(echo "$line" | sed -n 's/.*tests="\([0-9]\+\)".*/\1/p')
              fails=$(echo "$line" | sed -n 's/.*failures="\([0-9]\+\)".*/\1/p')
              errs=$(echo "$line" | sed -n 's/.*errors="\([0-9]\+\)".*/\1/p')
              tests=${tests:-0}; fails=${fails:-0}; errs=${errs:-0}
              msucc=$((msucc + tests - fails - errs))
              mfail=$((mfail + fails + errs))
            done

            successes=$((successes + msucc))
            failures=$((failures + mfail))

            jq --arg date "$today" \
               --arg proj "$module" \
               --arg succ "$msucc" \
               --arg fail "$mfail" \
               --arg p "reports/$today/$module/pages/" \
               '.[$date].projects[$proj] = {successes: ($succ|tonumber), failures: ($fail|tonumber), path: $p}' \
               report/history.json > report/tmp.json 2>/dev/null || \
               jq -n --arg date "$today" \
               --arg proj "$module" \
               --arg succ "$msucc" \
               --arg fail "$mfail" \
               --arg p "reports/$today/$module/pages/" \
               '{($date): {projects: {($proj): {successes: ($succ|tonumber), failures: ($fail|tonumber), path: $p}}}}' > report/tmp.json
            mv report/tmp.json report/history.json
          done

          # cleanup older than 7 days
          for d in $(ls report/reports | grep -E '^[0-9]{4}-[0-9]{2}-[0-9]{2}$'); do
            if [ "$(date -d "$d" +%s)" -lt "$(date -d '7 days ago' +%s)" ]; then
              rm -rf "report/reports/$d"
              jq "del(.\"$d\")" report/history.json > report/tmp.json && mv report/tmp.json report/history.json
            fi
          done

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './report'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
